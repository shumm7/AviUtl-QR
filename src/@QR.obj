@QR
--track0:サイズ,1,256,5
--track1:誤り訂正,1,4,2,1
--track2:最小Ver,1,40,1,1
--track3:最大Ver,1,40,40,1
--dialog:テキスト,local text="aviutl";色1/col,local col1="0xffffff";色2/col,local col2="0x000000";マスク[-1-7],local mask=-1;Boost ECC/chk,local boost=1;

local tm = require("textmodule")
local size = obj.track0

local function draw_dots(data, size)
	if data==nil then
		return
	end
	if #data==0 then
		return
	end

	local h = #data
	local c = 0
	for i=1, #data do
		c = math.max(c, #data[i])
	end
	local w = c

	local divW, divH = (w * size)/2, (h * size)/2

	obj.setoption("drawtarget", "tempbuffer", w * size, h * size)
	for y=1,h do
		for x=1,#data[y] do
			local d = data[y][x]
			if d~=nil and d~="nil" and d~="" then
				obj.load("figure", "四角形", d)
				obj.drawpoly((x-1)*size-divW,(y-1)*size-divH,0, x*size-divW,(y-1)*size-divH,0, x*size-divW,y*size-divH,0, (x-1)*size-divW,y*size-divH,0)
			end
		end
	end

	obj.load("tempbuffer")
end

-- textmoduleのバージョンチェック
if tm.getinfo("version", 2)<141 then
	return
end

-- QRコード生成
local tab = tm.qrcode.encode(text, obj.track1, obj.track2, obj.track3, mask, 1==boost)
for x=1,#tab do
    for y=1,#tab[x] do
        if tab[x][y] then
            tab[x][y] = col2
        else
            tab[x][y] = col1
        end
    end
end

-- 描画
draw_dots(tab, size)
